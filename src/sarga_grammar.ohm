
//TODO: change character definition to be similar to other objects
//TODO: all things are js objects, with properties
//TODO: new types can only be defined in js
//TODO: default object type (dumb object) is obj with props and slots (behaviour)
//TODO: should be able to send messages to slots, and receive response.
//TODO: should be able to get/set properties
//TODO: create separate identifierText rule so that Identifier can be made syntactic rule.

Sudina {
    // A script can contain one or more blocks
    Script = Statements

    // A block has a begin declaration followed by 0 or more statements
    // and end with an end declaration
    Block = BeginBlock Statements EndBlock

    // begin declaration is of the form
    // begin <blockname>
    BeginBlock = BeginKW identifier?

    // end declaration only contains the keyword
    EndBlock = EndKW

    BeginKW = "begin"
    EndKW = "end"

    // A statements list is made of one or more statements
    Statements = Statement (Statement)*

    // A statement can be with or without label
    Statement = StmtWithLabel | StmtWithoutLabel

    // Statement prefixed with label
    StmtWithLabel = Label StmtWithoutLabel

    // A statement can be on of the given types or a block
    StmtWithoutLabel = SaysStmt 
        | PlayStmt
        | LayerStmt
        | StartStmt
        | CharacterDeclaration
        | VariableDeclaration
        | AvatarDeclaration
        | AttachDeclaration
        | MessageStmt
        | ChoiceStmt
        | Block

    MessageStmt = MessageKW identifier AvatarProperties

    MessageKW = "msg"

    AttachDeclaration = AttachKW identifier identifier

    AttachKW = "attach"

    AvatarDeclaration = AvatarKW identifier AvatarDefinition

    AvatarKW = "avatar"

    AvatarDefinition = AvatarType AvatarProperties?

    AvatarType = identifier

    AvatarProperties = "[" AvatarProperty+ "]"

    AvatarProperty = identifier Text

    // A label is of the form #<id>
    Label = "#" identifier

    VariableDeclaration = VarKW identifier VarValue

    VarKW = "var"

    VarValue = AskFragment | Text

    AskFragment = AskKW Text

    AskKW = "ask"

    ChoiceStmt = ChoiceKW Text ChoiceOption+

    ChoiceKW = "choice"

    ChoiceOption = OptionKW Text eol* StmtWithoutLabel

    OptionKW = "option"

    // A character declaration of the form
    // character <character_name> <character_colour>
    CharacterDeclaration = CharacterKW CharacterName Colour

    CharacterKW = "character"

    CharacterName = identifier

    Colour = "#" hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit

    // The play statement is of the form
    // play audio <audioid>
    PlayStmt = PlayKW AudioKW identifier

    PlayKW = "play"
    AudioKW = "audio"

    // Start statement to run a block
    // start <blockid>
    StartStmt = StartKW identifier

    StartKW = "start"

    // Screen layers statment
    // layer <layer command>
    LayerStmt = LayerKW layer_cmd

    LayerKW = "layer"

    // A layer command can clear, set or unset layers
    layer_cmd = layer_clear_cmd
        // | layer_set_cmd
        // | layer_unset_cmd
        
    layer_clear_cmd = "clear"

    // layer_set_cmd = "set" ws+ layer_number ws+ drawable

    // layer_unset_cmd = "unset" ws+ layer_number

    // layer_number = digit+

    // drawable = identifier

    SaysStmt = SaysWho? SaysWhat

    SaysWhat = Text

    lineTerminator = "\n" | "\r" | "\u2028" | "\u2029"
    multiLineComment = "/*" (~"*/" strCharacter)* "*/"
    singleLineComment = "//" (~lineTerminator strCharacter)*

    Text = "\"" doubleStringCharacter* "\""
                | "'" singleStringCharacter* "'"

    doubleStringCharacter = ~("\"") strCharacter
    singleStringCharacter = ~("'") strCharacter

    SaysWho = Someone AvatarProperties? ":"

    Someone = identifier

    quote = "\""

    // Remove VariableExp
    // ExpressionAtom = strCharacter

    strCharacter = any

    VariableExp = "$" identifier
    
    identifier = (letter | underscore) (alnum | underscore)*

    underscore = "_"

    punctuation = "'" | "," | "." | "-" | ":" | "(" | ")" | unicodeConnectorPunctuation

    ws = " " | "\t"

    // comment = ";"

    eol = "\n" | "\r\n"   

    number = digit*

    letter += unicodeCategoryNl
    letter += unicodeDigit
    letter += unicodeCombiningMark

    unicodeCategoryNl
    = "\u2160".."\u2182" | "\u3007" | "\u3021".."\u3029"
    unicodeDigit (a digit)
    = "\u0030".."\u0039" | "\u0660".."\u0669" | "\u06F0".."\u06F9" | "\u0966".."\u096F" | "\u09E6".."\u09EF" | "\u0A66".."\u0A6F" | "\u0AE6".."\u0AEF" | "\u0B66".."\u0B6F" | "\u0BE7".."\u0BEF" | "\u0C66".."\u0C6F" | "\u0CE6".."\u0CEF" | "\u0D66".."\u0D6F" | "\u0E50".."\u0E59" | "\u0ED0".."\u0ED9" | "\u0F20".."\u0F29" | "\uFF10".."\uFF19"

    unicodeCombiningMark (a Unicode combining mark)
    = "\u0300".."\u0345" | "\u0360".."\u0361" | "\u0483".."\u0486" | "\u0591".."\u05A1" | "\u05A3".."\u05B9" | "\u05BB".."\u05BD" | "\u05BF".."\u05BF" | "\u05C1".."\u05C2" | "\u05C4".."\u05C4" | "\u064B".."\u0652" | "\u0670".."\u0670" | "\u06D6".."\u06DC" | "\u06DF".."\u06E4" | "\u06E7".."\u06E8" | "\u06EA".."\u06ED" | "\u0901".."\u0902" | "\u093C".."\u093C" | "\u093F".."\u0940" | "\u0941".."\u0948" | "\u094D".."\u094D" | "\u0951".."\u0954" | "\u0962".."\u0963" | "\u0981".."\u0981" | "\u09BC".."\u09BC" | "\u09C1".."\u09C4" | "\u09CD".."\u09CD" | "\u09E2".."\u09E3" | "\u0A02".."\u0A02" | "\u0A3C".."\u0A3C" | "\u0A41".."\u0A42" | "\u0A47".."\u0A48" | "\u0A4B".."\u0A4D" | "\u0A70".."\u0A71" | "\u0A81".."\u0A82" | "\u0ABC".."\u0ABC" | "\u0AC1".."\u0AC5" | "\u0AC7".."\u0AC8" | "\u0ACD".."\u0ACD" | "\u0B01".."\u0B01" | "\u0B3C".."\u0B3C" | "\u0B3F".."\u0B3F" | "\u0B41".."\u0B43" | "\u0B4D".."\u0B4D" | "\u0B56".."\u0B56" | "\u0B82".."\u0B82" | "\u0BC0".."\u0BC0" | "\u0BCD".."\u0BCD" | "\u0C3E".."\u0C40" | "\u0C46".."\u0C48" | "\u0C4A".."\u0C4D" | "\u0C55".."\u0C56" | "\u0CBF".."\u0CBF" | "\u0CC6".."\u0CC6" | "\u0CCC".."\u0CCD" | "\u0D41".."\u0D43" | "\u0D4D".."\u0D4D" | "\u0E31".."\u0E31" | "\u0E34".."\u0E3A" | "\u0E47".."\u0E4E" | "\u0EB1".."\u0EB1" | "\u0EB4".."\u0EB9" | "\u0EBB".."\u0EBC" | "\u0EC8".."\u0ECD" | "\u0F18".."\u0F19" | "\u0F35".."\u0F35" | "\u0F37".."\u0F37" | "\u0F39".."\u0F39" | "\u0F71".."\u0F7E" | "\u0F80".."\u0F84" | "\u0F86".."\u0F87" | "\u0F90".."\u0F95" | "\u0F97".."\u0F97" | "\u0F99".."\u0FAD" | "\u0FB1".."\u0FB7" | "\u0FB9".."\u0FB9" | "\u20D0".."\u20DC" | "\u20E1".."\u20E1" | "\u302A".."\u302F" | "\u3099".."\u309A" | "\uFB1E".."\uFB1E" | "\uFE20".."\uFE23"

    unicodeConnectorPunctuation = "\u005F" | "\u203F".."\u2040" | "\u30FB" | "\uFE33".."\uFE34" | "\uFE4D".."\uFE4F" | "\uFF3F" | "\uFF65"
    unicodeSpaceSeparator = "\u2000".."\u200B" | "\u3000"
}